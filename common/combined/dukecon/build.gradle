apply plugin: 'org.jetbrains.kotlin.multiplatform'
apply plugin: 'kotlinx-serialization'
apply plugin: 'org.jetbrains.kotlin.native.cocoapods'
apply plugin: 'co.touchlab.kotlinxcodesync'
apply plugin: 'io.spring.dependency-management'

apply from: "$rootDir/versions.gradle"

archivesBaseName = 'idukon'

version = "1.0"

kotlin {
    targets {
        // presets.iosArm64
        iosX64('iOS'){
            binaries {
                framework(archivesBaseName)
            }
        }
    }
    sourceSets {
        final List<String> projectsList = [
                ":common:domain",
                ":common:presentation",
                ":common:dukecon"
        ]
        commonMain {
            projectsList.forEach {
                kotlin.srcDirs += "${project(it).projectDir}/src/commonMain/kotlin"
            }
            dependencies {
                projectsList.forEach {
                    project(it).configurations.all { c ->
                        if (c.name == "commonMainApi") {
                            c.dependencies.all { dep ->
                                // note: Avoid dependencies for this project's modules like a `api project(":model")`.
                                //       Already these classes are included via `srcDir`,
                                //       so adding dependencies for projects causes compile error by double declaration.
                                if (!(dep instanceof ProjectDependency)) {
                                    api dep
                                }
                            }
                        } else if (c.name == "commonMainImplementation") {
                            c.dependencies.all { dep ->
                                if (!(dep instanceof ProjectDependency)) {
                                    implementation dep
                                }
                            }
                        }
                    }
                }

            }
        }
        iOSMain {
            final String mode = project.findProperty("XCODE_CONFIGURATION")?.toUpperCase() ?: 'DEBUG'
            projectsList.forEach {
                kotlin.srcDirs += "${project(it).projectDir}/src/iosMain/kotlin"
                if (mode == "RELEASE") {
                    kotlin.srcDirs += "${project(it).projectDir}/src/iosMain/kotlinRelease"
                } else {
                    kotlin.srcDirs += "${project(it).projectDir}/src/iosMain/kotlinDebug"
                }
            }
            dependencies {
                projectsList.forEach {
                    project(it).configurations.all { c ->
                        println("YYY configurations ${c.name}")
                        if (c.name == "iosMainApi") {
                            c.dependencies.all { dep ->
                                if (!(dep instanceof ProjectDependency)) {
                                    api dep
                                }
                            }
                        } else if (c.name == "iosMainImplementation") {
                            c.dependencies.all { dep ->
                                if (!(dep instanceof ProjectDependency)) {
                                    implementation dep
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    cocoapods {
        // Configure fields required by CocoaPods.
        summary = "Lots of Droidcon Stuff"
        homepage = "https://github.com/touchlab/DroidconKotlin"
    }
}


xcode {
    projectPath = "../../iosApp/iosApp.xcodeproj"
    target = "iosApp"
}

configurations {
    compileClasspath
}
