apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

//apply from: "$rootDir/git.gradle"

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"
    defaultConfig {
        minSdkVersion 24
        targetSdkVersion 29
        /*
        def buildTime = new Date().format("yyyy-MM-dd'T'HH:mm:ss'Z'", TimeZone.getTimeZone("UTC"))
        def gitSha = gitHash()
        def shortVersionFromGitTag = shortVersionFromGitTag()
        def fullVersionFromGitTag = fullVersionFromGitTag()
        def numericVersionFromGitTag = numericVersionFromGitTag()

        versionName shortVersionFromGitTag
        versionCode = numericVersionFromGitTag

        buildConfigField "String", "GIT_SHA", "\"${gitSha}\""
        buildConfigField "String", "BUILD_TIME", "\"${buildTime}\""
        buildConfigField "String", "FULL_VERSION", "\"${fullVersionFromGitTag}\""
        buildConfigField 'String', 'REVISION', "\"${gitVersionNumber()}\""

        println "Full Version: " + fullVersionFromGitTag
        println "Short Version: " + shortVersionFromGitTag
        println "Version code Version: " + versionCode

         */

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }


    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    flavorDimensions "conferences"

    productFlavors {

        bedcon {
            applicationId "org.dukecon.mobile.bedcon"
            dependencies {
                implementation(project(":shared:backend:sessionize"))
            }
        }

        javaland {
            applicationId "org.dukecon.mobile.javaland"
            dependencies {
                implementation(project(":shared:backend:dukecon"))
            }
        }
    }

    packagingOptions {
        exclude("LICENSE.txt")
        exclude("META-INF/DEPENDENCIES")
        exclude("META-INF/ASL2.0")
        exclude("META-INF/NOTICE")
        exclude("META-INF/LICENSE")
        exclude("META-INF/rxjava.properties")
        exclude("META-INF/common.kotlin_module")
        exclude("META-INF/*.kotlin_module")

    }
}

dependencies {
    implementation(project(":shared:core"))
    implementation(project(":shared:domain"))
    implementation(project(":shared:data"))
    implementation(project(":shared:presentation"))


    // https://mvnrepository.com/artifact/com.squareup.okhttp/logging-interceptor
    implementation("com.squareup.okhttp3:logging-interceptor:4.9.0")


    implementation('androidx.multidex:multidex:2.0.1')

    api 'androidx.core:core-ktx:1.3.2'


    implementation("com.squareup.okhttp3:okhttp:4.9.0")

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.9-native-mt-2"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.7-mpp-dev-11"

    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.0'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.0'
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation "com.google.android.material:material:1.2.1"


    def lifecycleVersion = "2.2.0"
    implementation("androidx.lifecycle:lifecycle-extensions:$lifecycleVersion")
    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion")
    implementation("androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion")


    implementation("org.slf4j:slf4j-api:1.7.30")
    implementation("com.github.tony19:logback-android:1.3.0-3")

    implementation 'androidx.appcompat:appcompat:1.2.0'

/*
    implementation "androidx.ui:ui-core:${Versions.compose}"
    implementation "androidx.ui:ui-layout:${Versions.compose}"
    implementation "androidx.ui:ui-material:${Versions.compose}"
    implementation "androidx.ui:ui-tooling:${Versions.compose}"
    implementation "androidx.ui:ui-graphics:${Versions.compose}"
    implementation "androidx.ui:ui-livedata:${Versions.compose}"
*/

    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.0'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.0'

    implementation "androidx.core:core-ktx:1.3.1"
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0"

    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    implementation("io.ktor:ktor-utils-jvm:1.4.1")
    implementation("io.ktor:ktor-client-okhttp:1.4.1")
    implementation("io.coil-kt:coil:1.0.0-rc3")
/*
    implementation(Libraries.kotlinStdLib)
    implementation(Libraries.kotlinxCoroutinesCore)
    implementation(Libraries.kotlinxSerializeJvm)
    implementation(Libraries.ktorUtilsJvm)
    implementation(Libraries.ktorCoreJvm)
    implementation(Libraries.ktorSerializationJvm)
    implementation(Libraries.ktorLoggingJvm)
    implementation(Libraries.ktorOkhttpJvm)
    implementation(Libraries.okhttInterceptorpJvm)
    implementation("org.jetbrains.kotlin:kotlin-reflect:1.3.50")
    implementation("com.google.android.material:material:1.0.0")
    implementation("androidx.constraintlayout:constraintlayout:1.1.3")
    implementation("androidx.cardview:cardview:1.0.0")
    implementation("androidx.recyclerview:recyclerview:1.0.0")
    implementation("androidx.preference:preference:1.1.0")
    implementation("io.coil-kt:coil:0.6.1")
    implementation("androidx.browser:browser:1.0.0")
    implementation("androidx.multidex:multidex:2.0.1")

    implementation("org.slf4j:slf4j-api:1.7.28")
    implementation("com.github.tony19:logback-android:1.3.0-3")


    testImplementation(Libraries.kotlinTestJvm)
    testImplementation(Libraries.kotlinxCoroutinesCore)
    testImplementation(Libraries.kotlinTestJunit)

 */
}


//apply(mapOf("plugin" to "com.google.gms.google-services"))


